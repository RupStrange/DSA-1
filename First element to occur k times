/*Given an array of n integers. Find the first element that occurs atleast k number of times.

Example 1:

Input :
n = 7, k = 2
a[] = {1, 7, 4, 3, 4, 8, 7}
Output :
4
Explanation :
Both 7 and 4 occur 2 times. But 4 is first that occurs twice.
As at index = 4, 4 has occurred twice whereas 7 appeared twice
at index 6.
Example 2:

Input :
n = 10, k = 3
a[] = {3, 1, 3, 4, 5, 1, 3, 3, 5, 4}
Output :
3
Explanation :
Here, 3 is the only number that appeared 3 times in the array.*/



class Solution
{
     public int firstElementKTime(int n, int k, int[] ar) { 
        HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
        int i=0,value;
        while(map.containsValue(k)==false && i<n){
            if(map.containsKey(ar[i])==false)
                map.put(ar[i],1);
            else
            {
                value=map.get(ar[i]);
                map.put(ar[i],value+1);
            }
            i++;
        }
        
        if(map.containsValue(k))
        {
            for(i=0;i<n;i++)
            {
                if(map.get(ar[i])==k)
                    return ar[i];
            }
        }
        return -1;
        
    } 
}
